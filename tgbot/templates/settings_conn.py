import textwrap
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from settings import Settings as sett

from .. import callback_datas as calls


def settings_conn_text():
    config = sett.get("config")
    proxy = config["funpay"]["api"]["proxy"] or "‚ùå –ù–µ –∑–∞–¥–∞–Ω–æ"
    requests_timeout = config["funpay"]["api"]["requests_timeout"] or "‚ùå –ù–µ –∑–∞–¥–∞–Ω–æ"
    runner_requests_delay = config["funpay"]["api"]["runner_requests_delay"] or "‚ùå –ù–µ –∑–∞–¥–∞–Ω–æ"
    txt = textwrap.dedent(f"""
        ‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí üì∂ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ</b>

        üåê <b>–ü—Ä–æ–∫—Å–∏:</b> {proxy}
        üõú <b>–¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ funpay.com:</b> {requests_timeout}
        ‚è±Ô∏è <b>–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ funpay.com:</b> {runner_requests_delay}

        <b>–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ funpay.com?</b>
        –≠—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è, –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å —Å —Å–∞–π—Ç–∞ FunPay. –ï—Å–ª–∏ –≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ, –∞ –æ—Ç–≤–µ—Ç –Ω–µ –ø—Ä–∏—à—ë–ª ‚Äî –±–æ—Ç –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É. –ï—Å–ª–∏ —É –≤–∞—Å —Å–ª–∞–±—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ–ª—å—à–µ

        <b>–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ funpay.com?</b>
        –° –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ FunPay –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π. –ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å—Ç–∞–≤–∏—Ç—å –Ω–∏–∂–µ 4 —Å–µ–∫—É–Ω–¥, —Ç–∞–∫ –∫–∞–∫ FunPay –ø–æ–ø—Ä–æ—Å—Ç—É –º–æ–∂–µ—Ç –∑–∞–±–∞–Ω–∏—Ç—å –≤–∞—à IP –∞–¥—Ä–µ—Å, –∏ –≤—ã —É–∂–µ –Ω–µ —Å–º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å –Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å—ã

        –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è ‚Üì
    """)
    return txt


def settings_conn_kb():
    config = sett.get("config")
    proxy = config["funpay"]["api"]["proxy"] or "‚ùå –ù–µ –∑–∞–¥–∞–Ω–æ"
    requests_timeout = config["funpay"]["api"]["requests_timeout"] or "‚ùå –ù–µ –∑–∞–¥–∞–Ω–æ"
    runner_requests_delay = config["funpay"]["api"]["runner_requests_delay"] or "‚ùå –ù–µ –∑–∞–¥–∞–Ω–æ"
    rows = [
        [InlineKeyboardButton(text=f"üåê –ü—Ä–æ–∫—Å–∏: {proxy}", callback_data="enter_proxy")],
        [InlineKeyboardButton(text=f"üõú –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ funpay.com: {requests_timeout}", callback_data="enter_funpayapi_requests_timeout")],
        [InlineKeyboardButton(text=f"‚è±Ô∏è –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ funpay.com: {runner_requests_delay}", callback_data="enter_funpayapi_runner_requests_delay")],
        [
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=calls.SettingsNavigation(to="default").pack()),
        InlineKeyboardButton(text="üîÑÔ∏è –û–±–Ω–æ–≤–∏—Ç—å", callback_data=calls.SettingsNavigation(to="conn").pack())
        ]
    ]
    if config["funpay"]["api"]["proxy"]: rows[0].append(InlineKeyboardButton(text=f"‚ùåüåê –£–±—Ä–∞—Ç—å –ø—Ä–æ–∫—Å–∏", callback_data="clean_conn|api|proxy"))
    kb = InlineKeyboardMarkup(inline_keyboard=rows)
    return kb


def settings_conn_float_text(placeholder: str):
    txt = textwrap.dedent(f"""
        ‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí üì∂ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ</b>
        \n{placeholder}
    """)
    return txt
