import textwrap
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from settings import Settings as sett

from .. import callback_datas as calls


def settings_tickets_text():
    config = sett.get("config")
    auto_tickets_enabled = "üü¢ –í–∫–ª—é—á–µ–Ω–æ" if config["funpay"]["auto_tickets"]["enabled"] else "üî¥ –í—ã–∫–ª—é—á–µ–Ω–æ"
    auto_tickets_orders_per_ticket = config["funpay"]["auto_tickets"]["orders_per_ticket"] or "‚ùå –ù–µ –∑–∞–¥–∞–Ω–æ"
    auto_tickets_create_interval = config["funpay"]["auto_tickets"]["interval"] or "‚ùå –ù–µ –∑–∞–¥–∞–Ω–æ"
    txt = textwrap.dedent(f"""
        ‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí üìû –¢–∏–∫–µ—Ç—ã</b>

        üìß <b>–ê–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–æ–≤ –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ:</b> {auto_tickets_enabled}
        üìã <b>–ö–æ–ª-–≤–æ –∑–∞–∫–∞–∑–æ–≤ –≤ –æ–¥–Ω–æ–º —Ç–∏–∫–µ—Ç–µ:</b> {auto_tickets_orders_per_ticket}
        ‚è±Ô∏è <b>–ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤:</b> {auto_tickets_create_interval}

        <b>–ß—Ç–æ —Ç–∞–∫–æ–µ –∞–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–æ–≤ –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ?</b>
        –ë–æ—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–∏–∫–µ—Ç—ã –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ –Ω–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –∫–∞–∂–¥—ã–µ N —Å–µ–∫—É–Ω–¥. –ß–µ–º –±–æ–ª—å—à–µ –∑–∞–∫–∞–∑–æ–≤ –≤ –æ–¥–Ω–æ–º —Ç–∏–∫–µ—Ç–µ - —Ç–µ–º –¥–æ–ª—å—à–µ –µ–≥–æ –±—É–¥—É—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å, 25 –∑–∞–∫–∞–∑–æ–≤ - –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. 24 —á–∞—Å–∞ - —Å–∞–º—ã–π –∏–¥–µ–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤, –≤–µ–¥—å –Ω–∞ FunPay —Å—Ç–æ–∏—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ 1 —Ç–∏–∫–µ—Ç–∞ –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ –≤ –¥–µ–Ω—å, —Å—Ç–∞–≤–∏—Ç—å –º–µ–Ω—å—à–µ –Ω–µ—Ç —Å–º—ã—Å–ª–∞

        –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è ‚Üì
    """)
    return txt


def settings_tickets_kb():
    config = sett.get("config")
    auto_tickets_enabled = "üü¢ –í–∫–ª—é—á–µ–Ω–æ" if config["funpay"]["auto_tickets"]["enabled"] else "üî¥ –í—ã–∫–ª—é—á–µ–Ω–æ"
    auto_tickets_orders_per_ticket = config["funpay"]["auto_tickets"]["orders_per_ticket"] or "‚ùå –ù–µ –∑–∞–¥–∞–Ω–æ"
    auto_tickets_create_interval = config["funpay"]["auto_tickets"]["interval"] or "‚ùå –ù–µ –∑–∞–¥–∞–Ω–æ"
    rows = [
        [InlineKeyboardButton(text=f"üìß –ê–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–æ–≤ –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ: {auto_tickets_enabled}", callback_data="switch_tickets|auto_tickets|enabled")],
        [InlineKeyboardButton(text=f"üìã –ö–æ–ª-–≤–æ –∑–∞–∫–∞–∑–æ–≤ –≤ –æ–¥–Ω–æ–º —Ç–∏–∫–µ—Ç–µ: {auto_tickets_orders_per_ticket}", callback_data="enter_auto_tickets_orders_per_ticket")],
        [InlineKeyboardButton(text=f"‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤: {auto_tickets_create_interval}", callback_data="enter_auto_tickets_create_interval")],
        [
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=calls.SettingsNavigation(to="default").pack()),
        InlineKeyboardButton(text="üîÑÔ∏è –û–±–Ω–æ–≤–∏—Ç—å", callback_data=calls.SettingsNavigation(to="tickets").pack())
        ]
    ]
    kb = InlineKeyboardMarkup(inline_keyboard=rows)
    return kb


def settings_tickets_float_text(placeholder: str):
    txt = textwrap.dedent(f"""
        ‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí üìû –¢–∏–∫–µ—Ç—ã</b>
        \n{placeholder}
    """)
    return txt